[{"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\Dashboard.js":"3","C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\PrivateRoute.js":"4","C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\login.js":"5","C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\user.js":"6","C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\signup.js":"7"},{"size":157,"mtime":1607692283150,"results":"8","hashOfConfig":"9"},{"size":941,"mtime":1607751393110,"results":"10","hashOfConfig":"9"},{"size":540,"mtime":1607692270374,"results":"11","hashOfConfig":"9"},{"size":591,"mtime":1607692318407,"results":"12","hashOfConfig":"9"},{"size":3350,"mtime":1607751097760,"results":"13","hashOfConfig":"9"},{"size":5689,"mtime":1607752133188,"results":"14","hashOfConfig":"9"},{"size":10555,"mtime":1607752133140,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"nbyloy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\index.js",[],["32","33"],"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\Dashboard.js",[],"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\PrivateRoute.js",[],"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\login.js",[],"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\user.js",[],"C:\\Users\\Admin\\Desktop\\react\\routeapi\\src\\signup.js",["34"],"import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {Row, Col, Card, Form, Input, Select, Radio, Checkbox, Button, InputNumber} from \"antd\";\r\nimport {UserOutlined, MailOutlined, HomeOutlined, FlagOutlined, LockOutlined, MobileOutlined} from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const history = useHistory();\r\n    const [userDetail, setUserDetail] = useState({});\r\n    const [error, setError] = React.useState({});\r\n\r\n    const [items] = useState([\r\n        {\r\n            label: \"India\",\r\n            value: \"India\"\r\n        },\r\n        {\r\n            label: \"Brazil\",\r\n            value: \"Brazil\"\r\n        },\r\n        {\r\n            label: \"USA\",\r\n            value: \"USA\"\r\n        },\r\n        {\r\n            label: \"Dubai\",\r\n            value: \"Dubai\"\r\n        },\r\n        {\r\n            label: \"UK\",\r\n            value: \"UK\"\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        listData(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    const listData = (id) => {\r\n        if (props.match.params.id !== undefined) {\r\n            axios.get(`http://localhost:8080/users/${id}`)\r\n                .then(response =>{\r\n                    if(response.data && response.data._id){\r\n                        setUserDetail(response.data)}\r\n                })\r\n                .catch(error =>\r\n                    console.log(error)\r\n                );\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n\r\n        setUserDetail({...userDetail, [name]: value})\r\n    }\r\n    const validate = (name, value) => {\r\n        const emailRegx = /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/ig;\r\n        const numRegx = /^\\d{1,6}(?:\\.\\d{0,2})?$/g;\r\n        const phoneRegx = /^[0]?[789]\\d{9}$/\r\n        switch (name) {\r\n            case 'firstName':\r\n                if (!value) return \"First Name is required\";\r\n                return null;\r\n            case 'lastName':\r\n                if (!value) return \"Last Name is required\";\r\n                return null;\r\n            case 'email':\r\n                if (!emailRegx.test(value)) return \"Email is required\";\r\n                return null;\r\n            case 'phone':\r\n                if (!phoneRegx.test(value)) return \"Valid PhoneNumber  is required\";\r\n                return null;\r\n            case 'age':\r\n                if (!numRegx.test(value)) return \"Age is required\";\r\n                return null;\r\n            case 'address':\r\n                if (value.length < 5) return \"Address is required\";\r\n                return null;\r\n            case 'gender':\r\n                if (!value) return \"Gender is required\";\r\n                return null;\r\n            case 'country':\r\n                if (!value) return \"Country is required\";\r\n                return null;\r\n            case 'password':\r\n                if (value.length < 3) return \"Password is required\";\r\n                return null;\r\n            case 'checkbox':\r\n                if (!value) return \"mark is required\";\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setUserDetail({})\r\n        setError({})\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        let errorObj = {}\r\n        const newsUerDetail = {\r\n            firstName: userDetail.firstName,\r\n            lastName: userDetail.lastName,\r\n            email: userDetail.email,\r\n            age: userDetail.age,\r\n            phone: userDetail.phone,\r\n            address: userDetail.address,\r\n            gender: userDetail.gender,\r\n            country: userDetail.country,\r\n            password: userDetail.password\r\n        }\r\n\r\n        Object.keys(newsUerDetail).forEach((key) => {\r\n            const error = validate(key, newsUerDetail[key]);\r\n            if (error && error.length) {\r\n                errorObj[key] = error;\r\n            }\r\n        });\r\n        if (Object.keys(errorObj).length) {\r\n            return setError(errorObj);\r\n        }\r\n        else {\r\n            if (props.match.params.id !== undefined) {\r\n                axios.put (`http://localhost:8080/users/${userDetail._id}`,userDetail)\r\n                    .then((res) => {\r\n                            resetForm()\r\n                            history.push(\"/user\")\r\n                        }\r\n                    );\r\n            } else {\r\n                axios.post('http://localhost:8080/users', userDetail)\r\n                    .then(() => {\r\n                        resetForm()\r\n                        history.push(\"/login\")\r\n                    })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{marginTop: 100}}>\r\n                <Col span={8}/>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <h2 style={{textAlign: \"center\"}}>Registration Form</h2>\r\n                        <p style={{textAlign: \"center\"}}>Creat Your Account</p><br/>\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your firstname\" name=\"firstName\" value={userDetail.firstName}\r\n                                       onChange={handleChange} addonBefore={(<UserOutlined/>)}/>\r\n                                <span className=\"text-danger\">{error.firstName || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your lastname\" name=\"lastName\" value={userDetail.lastName}\r\n                                       onChange={handleChange} addonBefore={(<UserOutlined/>)}/>\r\n                                <span className=\"text-danger\">{error.lastName || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your EmailId\" name=\"email\" value={userDetail.email}\r\n                                       onChange={handleChange} addonBefore={<MailOutlined/>}/>\r\n                                <span className=\"text-danger\">{error.email || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your Mobile Number\" name=\"phone\" value={userDetail.phone}\r\n                                       onChange={handleChange} addonBefore={<MobileOutlined/>}\r\n                                       style={{width: '100%'}}/>\r\n                                <span className=\"text-danger\">{error.phone || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                Age : <InputNumber placeholder=\"age\" name=\"age\"\r\n                                                   onChange={value => handleChange({target: {name: \"age\", value}})}\r\n                                                   value={userDetail.age}/>\r\n                                <span className=\"text-danger\">{error.age || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item>\r\n                                <Input rows={4} name=\"address\" placeholder=\"Please Input Your Address!\"\r\n                                       value={userDetail.address}\r\n                                       onChange={handleChange} addonBefore={<HomeOutlined/>}/>\r\n                                <span className=\"text-danger\">{error.address || \"\"}</span>\r\n\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n\r\n                                Gender: <Radio.Group name=\"gender\" onChange={e => handleChange({\r\n                                target: {\r\n                                    name: \"gender\",\r\n                                    value: e.target.value\r\n                                }\r\n                            })} value={userDetail.gender}>\r\n                                <Radio value=\"Male\">Male</Radio>\r\n                                <Radio value=\"Female\">Female</Radio>\r\n                                <Radio value=\"Other\">Other</Radio>\r\n                            </Radio.Group>\r\n                                <span className=\"text-danger\">{error.gender || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label={(<FlagOutlined/>)}>\r\n                                <Select\r\n                                    placeholder=\"Please Select Your Country\"\r\n                                    onChange={value => handleChange({target: {name: \"country\", value}})}\r\n                                    value={userDetail.country}\r\n                                    allowClear\r\n                                >\r\n                                    {items.map(items => (\r\n                                        <Select.Option\r\n                                            key={items.value}\r\n                                            value={items.value}>\r\n                                            {items.label}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                                <span className=\"text-danger\">{error.country || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n\r\n                                <Input.Password placeholder=\"Enter Your PassWord\" name=\"password\"\r\n                                                value={userDetail.password} onChange={handleChange}\r\n                                                addonBefore={(<LockOutlined/>)}/>\r\n                                <span className=\"text-danger\">{error.password || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Checkbox name=\"checkbox\">\r\n                                    I have read the agreement\r\n                                </Checkbox>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button className=\"btn-create-account\" onClick={onSubmit}>\r\n                                    Create Account\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default SignUp;\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":40,"column":8,"nodeType":"41","endLine":40,"endColumn":31,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listData'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [listData, props.match.params.id]",{"range":"48","text":"49"},[1097,1120],"[listData, props.match.params.id]"]